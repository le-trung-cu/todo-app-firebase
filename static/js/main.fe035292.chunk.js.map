{"version":3,"sources":["firebase/firebase.utils.js","components/header/header.component.js","components/header-date/header-date.component.js","components/input-add-task/input-add-task.component.js","components/checkbox/checkbox.component.js","components/todo-item-menu/todo-item-menu.component.js","components/todo-item/todo-item.component.js","components/todo-list/todo-list.component.js","pages/page-day-todo.component.js","components/input-form/input-form.component.js","components/button-sing-in-with-google/button-google-with-google.component.js","components/sign-in/sign-in.component.js","components/sign-up/sign-up.component.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","GoogleAuthProvider","firestore","auth","signInWithGoogle","signInWithPopup","signInWithEmailAndPassword","email","pass","signOut","a","console","log","tasksContext","collection","currentUser","uid","addTask","task","add","updateTask","taskRef","doc","id","get","exists","update","Error","deleteTask","taskId","delete","createUserProfileDocument","userAuth","addtionalData","userRef","displayName","createdAt","Date","set","message","Header","className","to","href","onClick","HeaderDate","handleChangeDateQuery","useState","date","setDate","useEffect","dateStrs","toString","split","getHumanDate","data","onChange","value","InputAddTask","handleAddTask","dateQuery","taskTitle","setTaskTitle","taskDescription","setTaskDescription","onSubmit","event","preventDefault","isCompleted","title","description","isPin","name","type","placeholder","target","Fragment","CheckBox","isChecked","role","TodoItemMenu","handlePinTask","handleDeleteTask","TodoItem","handleCompleteTask","toggleMenuDropDown","setToggleMenuDropDown","inputId","inputName","TodoList","pinTask","tasks","map","item","index","key","PageDayTodo","props","func","taskPins","state","setState","filter","where","taskDocs","docs","element","push","t","unSubscribe","unSubscribeTaskSnapshot","this","onAuthStateChanged","userFromProvider","Component","InputForm","label","htmlFor","ButtonSingInWithGoogle","SignIn","handelInputChange","e","handleSignInSubmit","password","user","action","required","minLength","SignUp","handleSignUpSubmit","signUpEmail","signUpPassword","createUserWithEmailAndPassword","App","onSnapshot","snapshot","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.fe035292.chunk.js","sourcesContent":["// Firebase App (the core Firebase SDK) is always required and must be listed first\r\nimport * as firebase from \"firebase/app\";\r\n\r\n// If you enabled Analytics in your project, add the Firebase SDK for Analytics\r\nimport \"firebase/analytics\";\r\n\r\n// Add the Firebase products that you want to use\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n// import \"firebase/database\";\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyB1NAMiSk3wIPe7B-7Jt5WZBZcVD9VnIb8\",\r\n  authDomain: \"todo-app-ba288.firebaseapp.com\",\r\n  databaseURL: \"https://todo-app-ba288.firebaseio.com\",\r\n  projectId: \"todo-app-ba288\",\r\n  storageBucket: \"todo-app-ba288.appspot.com\",\r\n  messagingSenderId: \"693925251734\",\r\n  appId: \"1:693925251734:web:be00b4f64fac501afd50b7\",\r\n  measurementId: \"G-FY4WVSFSY1\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nvar provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nconst firestore = firebase.firestore();\r\n// const database = firebase.database();\r\n\r\nexport const auth = firebase.auth();\r\n\r\nexport const signUp = (email, password) => auth.createUserWithEmailAndPassword(email, password);\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\nexport const signInWithEmailAndPassword = (email, pass) => auth.signInWithEmailAndPassword(email, pass);\r\nexport const signOut = async () => { await auth.signOut(); console.log('..........sssssssssssss......') }\r\n\r\nexport const tasksContext = () => firestore.collection(`users/${auth.currentUser.uid}/tasks`);\r\n\r\nexport const addTask = async (task) => {\r\n  if (!auth.currentUser) return;\r\n  return await tasksContext().add(task)\r\n}\r\n\r\nexport const updateTask = async (task) => {\r\n  if (!auth.currentUser) return;\r\n  let taskRef = tasksContext().doc(task.id);\r\n  if ((await taskRef.get()).exists) {\r\n    await taskRef.update(task);\r\n  } else {\r\n    throw new Error('task not exists');\r\n  }\r\n}\r\n\r\nexport const deleteTask = async (taskId) => {\r\n  if(!auth.currentUser) return;\r\n  let taskRef = tasksContext().doc(taskId);\r\n  if ((await taskRef.get()).exists) {\r\n    await taskRef.delete();\r\n  } else {\r\n    throw new Error('task not exists');\r\n  }\r\n}\r\n\r\nexport const createUserProfileDocument = async (userAuth, addtionalData) => {\r\n  if (!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n  const userShot = await userRef.get();\r\n  if (!userShot.exists) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...addtionalData\r\n      })\r\n    } catch (error) {\r\n      console.log('error creating user', error.message);\r\n    }\r\n  }\r\n  return userRef;\r\n}\r\n","import React from 'react';\r\nimport './header.styles.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { signOut } from '../../firebase/firebase.utils';\r\n\r\nconst Header = ({ currentUser }) => {\r\n    return (\r\n        <header>\r\n            <nav className=\"navigation\">\r\n                <ul className=\"navigation__list\">\r\n                    <li className=\"navigation__item\">\r\n                        <Link className=\"navigation__link\" to=\"/todo-app-firebase/\">Day</Link>\r\n                    </li>\r\n                    <li className=\"navigation__item\">\r\n                        <a className=\"navigation__link navigation__link--disabled\" href=\"#\">Week</a>\r\n                    </li>\r\n                    <li className=\"navigation__item navigation__item--disabled\">\r\n                        <a className=\"navigation__link navigation__link--disabled\" href=\"#\">Month</a>\r\n                    </li>\r\n                    <li className=\"navigation__item navigation__item--disabled\">\r\n                        <a className=\"navigation__link navigation__link--disabled\" href=\"#\">Year</a>\r\n                    </li>\r\n                    <li className=\"navigation__item\">\r\n                        {\r\n                            currentUser ? <a className=\"navigation__link\" onClick={signOut}>Sign Out</a>\r\n                                : <Link className=\"navigation__link\" to=\"/todo-app-firebase/sign-in\">Sign In</Link>\r\n                        }\r\n\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            {\r\n                currentUser ? <h5 className=\"wellcome-message\">Hi: {currentUser.displayName}</h5> : null\r\n            }\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { useState, useEffect } from 'react';\r\nimport DatePicker from 'react-date-picker';\r\n\r\nimport './header-date.styles.scss';\r\n\r\nconst HeaderDate = ({handleChangeDateQuery}) => {\r\n\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    const handleChangeDate = date => {\r\n        setDate(date);\r\n    }\r\n\r\n    useEffect( () => {\r\n        //Mon May 11 2020 10:31:29 GMT+0700 (Indochina Time)\r\n        let dateStrs = date.toString().split(' ');\r\n        handleChangeDateQuery(`${dateStrs[0]} ${dateStrs[1]} ${dateStrs[2]} ${dateStrs[3]}`);\r\n\r\n    }, [date]);\r\n\r\n    const getHumanDate = data => {\r\n        //Mon May 11 2020 10:31:29 GMT+0700 (Indochina Time)\r\n        let dateStrs = date.toString().split(' ');\r\n\r\n        switch(data){\r\n            case 'day': // day of week\r\n                return dateStrs[0];\r\n            case 'month':\r\n                return dateStrs[1];\r\n            case 'date': // day of month\r\n                return dateStrs[2];\r\n            case 'year':\r\n                return dateStrs[3];\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"header-date\">\r\n            <div className=\"header-date__content\">\r\n                <h3 className=\"header-date__main\">{getHumanDate('day')}</h3>\r\n                <p className=\"header-date__sub\">{`${getHumanDate('month')} ${getHumanDate('date')}, ${getHumanDate('year')}`}</p>\r\n                <DatePicker onChange={handleChangeDate}\r\n                    value={date} />\r\n            </div>\r\n            <i className=\"flaticon-left-arrow header-date__next-day\"></i>\r\n            <i className=\"flaticon-next header-date__prev-day\"></i>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HeaderDate;","import React, { useState } from 'react';\r\nimport './input-add-task.styles.scss';\r\n\r\nconst InputAddTask = ({ handleAddTask, dateQuery }) => {\r\n\r\n    const [taskTitle, setTaskTitle] = useState('');\r\n    const [taskDescription, setTaskDescription] = useState('');\r\n\r\n    const handelAddTaskSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        handleAddTask({\r\n            createdAt: dateQuery,\r\n            isCompleted: false,\r\n            title: taskTitle,\r\n            description: taskDescription,\r\n            isPin: false\r\n        });\r\n        setTaskTitle('');\r\n        setTaskDescription('');\r\n    }\r\n    return (\r\n        <form onSubmit={handelAddTaskSubmit} className=\"input-add-task\"\r\n            name=\"taskForm\">\r\n            <i className=\"flaticon-sort input-add-task__icon\"></i>\r\n            <input className=\"input-add-task__input\"\r\n                name=\"taskTitle\"\r\n                type=\"text\"\r\n                placeholder=\"Add a task...\"\r\n                value={taskTitle}\r\n                onChange={(event) => setTaskTitle(event.target.value)} />\r\n            {\r\n                (taskTitle || taskDescription) ?\r\n                    <React.Fragment>\r\n                        <textarea className=\"input-add-task__input input-add-task__input--description\"\r\n                            name=\"taskDescription\"\r\n                            type=\"text\"\r\n                            value={taskDescription}\r\n                            placeholder=\"description\"\r\n                            onChange={event => setTaskDescription(event.target.value)} />\r\n                        <button className=\"input-add-task__btn\">Ok</button>\r\n                    </React.Fragment>\r\n                    : null\r\n            }\r\n\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default InputAddTask;","import React, { useState } from 'react';\r\nimport './checkbox.styles.scss';\r\n\r\nconst CheckBox = ({ isChecked, onChange }) => {\r\n\r\n    return (\r\n        <div role=\"checkbox\" className={`checkbox${isChecked ? ' checked' : ''}`}>\r\n            <label className=\"checkbox__label\" onClick={onChange}></label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CheckBox;","import React from 'react';\r\nimport './todo-item-menu.styles.scss';\r\n\r\nconst TodoItemMenu = ({ isPin, handlePinTask, handleDeleteTask }) => {\r\n    return (\r\n        <ul className=\"todo-item-menu\">\r\n            <li className=\"todo-item-menu__item\">\r\n                <button href=\"\" onClick={handlePinTask}>\r\n                    <i className=\"flaticon-outline todo-item-menu__icon\"></i>\r\n                    <span className=\"todo-item-menu__text\">{isPin ? \"Unpin task\" : \"Pin on the top\"}</span>\r\n                </button>\r\n            </li>\r\n            <li className=\"todo-item-menu__item\">\r\n                <i className=\"flaticon-note-blank-paper-with-one-folded-corner todo-item-menu__icon\"></i>\r\n                <span className=\"todo-item-menu__text\">Add a memo</span>\r\n            </li>\r\n            <li className=\"todo-item-menu__item\">\r\n                <button onClick={handleDeleteTask}>\r\n                    <i className=\"flaticon-recycle-bin todo-item-menu__icon\"></i>\r\n                    <span className=\"todo-item-menu__text\">Delete</span>\r\n                </button>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoItemMenu;","import React, { useState } from 'react';\r\nimport CheckBox from '../checkbox/checkbox.component';\r\nimport './todo-item.styles.scss';\r\nimport TodoItemMenu from '../todo-item-menu/todo-item-menu.component';\r\n\r\nconst TodoItem = ({ task, handleCompleteTask, handlePinTask, handleDeleteTask }) => {\r\n\r\n    const { isCompleted, isPin, title, description, id } = task;\r\n    const [toggleMenuDropDown, setToggleMenuDropDown] = useState(false);\r\n\r\n    const handleMenuDropDown = () => {\r\n        setToggleMenuDropDown(!toggleMenuDropDown);\r\n    }\r\n\r\n    return (\r\n        <li className=\"todo-item\">\r\n            {isPin? <i className=\"flaticon-outline todo-item__pin\"/>:null }\r\n            <CheckBox onChange={handleCompleteTask} isChecked={isCompleted}\r\n                inputId={\"taskId_\" + id} inputName={\"taskName_\" + id} />\r\n            <div className=\"todo-item__box\">\r\n                <h5 className=\"todo-item__main\">{title}</h5>\r\n                <p className=\"todo-item__sub\">{description}</p>\r\n            </div>\r\n            <button className=\"flaticon-more todo-item__menu-btn\" \r\n            onClick={handleMenuDropDown}></button>\r\n            {\r\n                toggleMenuDropDown ? <TodoItemMenu isPin={isPin} \r\n                    handlePinTask={handlePinTask}\r\n                    handleDeleteTask={handleDeleteTask}/> : null\r\n            }\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport TodoItem from '../todo-item/todo-item.component';\r\nimport './todo-list.styles.scss';\r\n\r\nconst TodoList = ({ pinTask, tasks, handleCompleteTask, handlePinTask,handleDeleteTask }) => {\r\n\r\n    return (\r\n        <ul className={`todo__list${pinTask?' todo__list--pin':''}`}>\r\n            {\r\n                tasks.map((item, index) => <TodoItem key={item.id} task={item}\r\n                handleCompleteTask={() => handleCompleteTask(item)}\r\n                handlePinTask={() => handlePinTask(item)}\r\n                handleDeleteTask={() => handleDeleteTask(item)}/>)\r\n            }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React, { Component } from 'react';\r\nimport HeaderDate from '../components/header-date/header-date.component';\r\nimport InputAddTask from '../components/input-add-task/input-add-task.component';\r\nimport TodoList from '../components/todo-list/todo-list.component';\r\nimport { addTask, tasksContext, auth, updateTask, deleteTask } from '../firebase/firebase.utils';\r\n\r\nclass PageDayTodo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { tasks: [], taskPins: [], dateQuery: '' };\r\n        this.unSubscribe = null;\r\n        this.unSubscribeTaskSnapshot = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unSubscribe = auth.onAuthStateChanged(async userFromProvider => {\r\n            if (userFromProvider) {\r\n                let taskDocs = await tasksContext()\r\n                    .where('createdAt', '==', this.state.dateQuery)\r\n                    .get();\r\n                let tasks = [];\r\n                for (let element of taskDocs.docs) {\r\n                    tasks.push({ ...element.data(), id: element.id });\r\n                }\r\n                this.setState({ tasks: tasks.filter(t => t.isPin === false) });\r\n                this.setState({ taskPins: tasks.filter(t => t.isPin === true) });\r\n            }\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unSubscribe();\r\n    }\r\n\r\n\r\n    handleCompleteTask = async (task) => {\r\n        const func = (item) => {\r\n            if (item === task) {\r\n                return { ...task, isCompleted: !task.isCompleted };\r\n            }\r\n            return item;\r\n        };\r\n        if (!task.isPin) {\r\n            let tasks = this.state.tasks.map(func);\r\n            this.setState({ tasks });\r\n        }\r\n        else {\r\n            let taskPins = this.state.taskPins.map(func);\r\n            this.setState({ taskPins });\r\n        }\r\n\r\n        await updateTask({...task,isCompleted: !task.isCompleted});\r\n    }\r\n\r\n    handleAddTask = async (task) => {\r\n        let taskRef = await addTask(task);\r\n        // let taskDoc = (await taskRef.get()).data();\r\n        this.setState({ tasks: [{ ...task, id: taskRef.id }, ...this.state.tasks] });\r\n    }\r\n\r\n    handlePinTask = async (task) => {\r\n        // if task is Pin toggle that\r\n        if (task.isPin) {\r\n            let taskPins = this.state.taskPins.filter(item => item !== task);\r\n            this.setState({ taskPins });\r\n            this.setState({ tasks: [{ ...task, isPin: !task.isPin }, ...this.state.tasks] })\r\n        } else {\r\n            let tasks = this.state.tasks.filter(item => item !== task);\r\n            this.setState({ tasks });\r\n            this.setState({ taskPins: [{ ...task, isPin: !task.isPin }, ...this.state.taskPins] });\r\n        }\r\n\r\n        await updateTask({...task, isPin: !task.isPin})\r\n    }\r\n\r\n    handleDeleteTask = async (task) => {\r\n        if (task.isPin) {\r\n            let taskPins = this.state.taskPins.filter(item => item !== task);\r\n            this.setState({ taskPins });\r\n        } else {\r\n            let tasks = this.state.tasks.filter(item => item !== task);\r\n            this.setState({ tasks });\r\n        }\r\n\r\n        await deleteTask(task.id);\r\n    }\r\n\r\n    handleChangeDateQuery = async (dateQuery) => {\r\n        if (auth.currentUser) {\r\n            let taskDocs = await tasksContext()\r\n                .where('createdAt', '==', dateQuery)\r\n                .get();\r\n            let tasks = [];\r\n            for (let element of taskDocs.docs) {\r\n                tasks.push({ ...element.data(), id: element.id });\r\n            }\r\n            this.setState({ tasks: tasks.filter(t => t.isPin === false) });\r\n            this.setState({ taskPins: tasks.filter(t => t.isPin === true) });\r\n        }\r\n        this.setState({ dateQuery });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <main className=\"main\">\r\n                    <HeaderDate handleChangeDateQuery={this.handleChangeDateQuery} />\r\n                    <InputAddTask handleAddTask={this.handleAddTask} dateQuery={this.state.dateQuery} />\r\n                    <div className=\"todo\">\r\n                        <ul className=\"todo__list-pin\"></ul>\r\n                        <TodoList pinTask={true} tasks={this.state.taskPins}\r\n                            handleCompleteTask={this.handleCompleteTask}\r\n                            handlePinTask={this.handlePinTask}\r\n                            handleDeleteTask={this.handleDeleteTask} />\r\n                        <TodoList tasks={this.state.tasks}\r\n                            handleCompleteTask={this.handleCompleteTask}\r\n                            handlePinTask={this.handlePinTask}\r\n                            handleDeleteTask={this.handleDeleteTask} />\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nexport default PageDayTodo;","import React from 'react';\r\nimport './input-form.styles.scss';\r\n\r\nconst InputForm = ({name, label, id, ...props}) => {\r\n    return (\r\n        <div className=\"input-form\">\r\n            <input placeholder={label} className=\"input-form__input\"\r\n            name={name} id={id} \r\n                {...props}\r\n                />\r\n            <label className=\"input-form__label\" htmlFor={id}>{label}</label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputForm;","import React from 'react'\nimport { signInWithGoogle } from '../../firebase/firebase.utils';\n\nconst ButtonSingInWithGoogle = () => {\n    return (\n        <button onClick={signInWithGoogle} className=\"sign-in__btn sign-in__btn--google\">Google</button>\n    )\n}\n\nexport default ButtonSingInWithGoogle\n","import React, { Component } from 'react';\r\nimport InputForm from '../input-form/input-form.component';\r\nimport './sign-in.styles.scss';\r\nimport { signInWithGoogle, signInWithEmailAndPassword } from '../../firebase/firebase.utils';\r\nimport { Link } from 'react-router-dom';\r\nimport ButtonSingInWithGoogle from '../button-sing-in-with-google/button-google-with-google.component';\r\n\r\nclass SignIn extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { email: '', password: '' };\r\n    }\r\n\r\n    handelInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        let state = {};\r\n        state[name] = value;\r\n        this.setState(state);\r\n    }\r\n\r\n    handleSignInSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const { email, password } = this.state;\r\n        try {\r\n            let { user } = await signInWithEmailAndPassword(email, password);\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        this.setState({ email: '', password: '' });\r\n    }\r\n    render() {\r\n        const { email, password } = this.state;\r\n        return (\r\n            <div className=\"sign-in\">\r\n                <h2 className=\"sign-in__heading\">SIGN IN</h2>\r\n                <form action=\"\" onSubmit={this.handleSignInSubmit}>\r\n                    <InputForm id=\"email\"\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        value={email}\r\n                        required\r\n                        minLength=\"6\"\r\n                        type=\"email\"\r\n                        onChange={this.handelInputChange} />\r\n                    <InputForm type=\"password\" id=\"password\"\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        minLength=\"2\"\r\n                        value={password}\r\n                        required\r\n\r\n                        onChange={this.handelInputChange} />\r\n                    <div className=\"sign-in__row\">\r\n                        <button className=\"sign-in__btn\">SIGN IN</button>\r\n                        <Link className=\"link-color\" to='/todo-app-firebase/sign-up'>Sign up?</Link>\r\n                    </div>\r\n                </form>\r\n                <ButtonSingInWithGoogle />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default SignIn;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport InputForm from '../input-form/input-form.component';\r\nimport { signUp, createUserProfileDocument } from '../../firebase/firebase.utils';\r\nimport ButtonSingInWithGoogle from '../button-sing-in-with-google/button-google-with-google.component';\r\n\r\nclass SignUp extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { signUpEmail: '', signUpPassword: '', displayName: '' };\r\n    }\r\n\r\n    handelInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        let state = {};\r\n        state[name] = value;\r\n        this.setState(state);\r\n    }\r\n\r\n    handleSignUpSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const { signUpEmail, signUpPassword, displayName } = this.state;\r\n        try {\r\n            let { user } = await signUp(signUpEmail, signUpPassword);\r\n            createUserProfileDocument(user, { displayName });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        this.setState({ signUpEmail: '', signUpPassword: '', displayName: '' });\r\n    }\r\n\r\n    render() {\r\n        const { signUpEmail, signUpPassword, displayName } = this.state;\r\n        return (\r\n            <div className=\"sign-up sign-in\">\r\n                <h2 className=\"sign-in__heading\">SIGN Up</h2>\r\n                <form action=\"\" onSubmit={this.handleSignUpSubmit}>\r\n                    <InputForm id=\"signUpEmail\" type=\"email\" name=\"signUpEmail\" label=\"Email\"\r\n                        type=\"email\"\r\n                        required\r\n                        onChange={this.handelInputChange}\r\n                        value={signUpEmail} />\r\n                    <InputForm onChange={this.handelInputChange} type=\"password\"\r\n                        id=\"signUpPassword\"\r\n                        name=\"signUpPassword\"\r\n                        label=\"Password\"\r\n                        minLength=\"6\"\r\n                        required\r\n                        value={signUpPassword}\r\n                        onChange={this.handelInputChange} />\r\n                    <InputForm onChange={this.handelInputChange} type=\"text\"\r\n                        id=\"displayName\"\r\n                        name=\"displayName\"\r\n                        label=\"Display Name\"\r\n                        minLength=\"2\"\r\n                        required\r\n                        value={displayName}\r\n                        onChange={this.handelInputChange} />\r\n                    <div className=\"sign-in__row\">\r\n                        <button className=\"sign-in__btn\">SIGN UP</button>\r\n                        <Link className=\"link-color\" to='/todo-app-firebase/sign-in'>Sign In?</Link>\r\n                    </div>\r\n                </form>\r\n                <ButtonSingInWithGoogle />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React, { Component } from 'react';\nimport './app.styles.scss';\nimport Header from './components/header/header.component';\n\nimport PageDayTodo from './pages/page-day-todo.component';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport SignIn from './components/sign-in/sign-in.component';\nimport { createUserProfileDocument, auth } from './firebase/firebase.utils';\nimport SignUp from './components/sign-up/sign-up.component';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = { currentUser: null }\n    this.unSubscribe = null;\n  }\n\n  componentDidMount() {\n    this.unSubscribe = auth.onAuthStateChanged(async userFromProvider => {\n      if (userFromProvider) {\n        let userRef = await createUserProfileDocument(userFromProvider);\n        userRef.onSnapshot(snapshot => {\n          console.log('current user change')\n          let currentUser = {\n            id: snapshot.id,\n            ...snapshot.data()\n          };\n          this.setState({ currentUser });\n        });\n\n      } else {\n        this.setState({ currentUser: null });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unSubscribe();\n  }\n\n  render() {\n    console.log(this.state.currentUser)\n    return (\n      <BrowserRouter>\n        <div className=\"app-wrap\">\n          <div className=\"app\">\n            <Header currentUser={this.state.currentUser} />\n            <Switch>\n              <Route exact path='/todo-app-firebase'>\n                {!this.state.currentUser ? <Redirect to='/todo-app-firebase/sign-in' /> : null}\n                <PageDayTodo />\n              </Route>\n              <Route exact path='/todo-app-firebase/sign-in'>\n                {this.state.currentUser ? <Redirect to='/todo-app-firebase' /> : <SignIn />}\n              </Route>\n              <Route exact path='/todo-app-firebase/sign-up'>\n                {this.state.currentUser ? <Redirect to='/todo-app-firebase' /> : <SignUp />}\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}